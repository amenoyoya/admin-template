#!/bin/bash

cd $(dirname $0)
export USER_ID="${USER_ID:-$UID}"

case "$1" in
"init")
    tee ./.gitignore << \EOS
node_modules/
EOS
    tee Dockerfile << \EOS
FROM mcr.microsoft.com/playwright

# Docker実行ユーザIDを環境変数から取得
ARG UID

RUN : '日本語対応' && \
    apt-get update && \
    apt-get -y install locales fonts-ipafont fonts-ipaexfont && \
    echo "ja_JP UTF-8" > /etc/locale.gen && locale-gen && \
    : 'Add user $UID (if $UID already exists, then change user id)' && \
    if [ "$(getent passwd $UID)" != "" ]; then usermod -u $((UID + 100)) "$(getent passwd $UID | cut -f 1 -d ':')"; fi && \
    useradd -m -s /bin/bash -u $UID user && \
    apt-get install -y sudo && \
    echo 'user ALL=NOPASSWD: ALL' >> '/etc/sudoers' && \
    : 'install playwright' && \
    yarn global add playwright && \
    : 'fix permission' && \
    mkdir -p /usr/local/share/.config/ && \
    chown -R user /usr/local/share/.config/ && \
    : 'cleanup apt-get caches' && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# 作業ディレクトリ: ./ => service://node:/work/
WORKDIR /work/

# 作業ユーザ: user (UserID: $UID)
USER user
EOS
    tee ./.env << \EOS
MONGO_PORT=27017
MONGO_EXPRESS_PORT=8081
RESTHEART_PORT=8080
EOS
    tee ./docker-compose.yml << \EOS
# ver 3.6 >= required: enable '-w' option for 'docker-compose exec'
version: "3.8"

networks:
  # プロジェクト内仮想ネットワーク
  ## 同一ネットワーク内の各コンテナはサービス名で双方向通信可能
  appnet:
    driver: bridge
    # ネットワークIP範囲を指定する場合
    # ipam:
    #   driver: default
    #   config:
    #     # 仮想ネットワークのネットワーク範囲を指定
    #     ## 172.68.0.0/16 の場合、172.68.0.1 ～ 172.68.255.254 のIPアドレスを割り振れる
    #     ## ただし 172.68.0.1 はゲートウェイに使われる
    #     - subnet: 172.68.0.0/16

volumes:
  # volume for mongo service container
  mongo-data:

services:
  # node service container: mcr.microsoft.com/playwright (nodejs 14.x)
  node:
    build:
      context: ./ # build from ./Dockerfile
      args:
        # use current working user id
        UID: $USER_ID
    logging:
      driver: json-file
    # tcp://localhost:<port> => service://node:<port>
    network_mode: host
    # enable terminal
    tty: true
    volumes:
      # ./ => service:node:/work/
      - ./:/work/
    environment:
      TZ: Asia/Tokyo

  # mongo service container: mongo db v4.4
  mongo:
    image: mongo:4.4
    logging:
      driver: json-file
    # restart: always
    # 所属ネットワーク
    networks:
      - appnet
    ports:
      # tcp://localhost:${MONGO_PORT} => service://db:27017
      - ${MONGO_PORT:-27017}:27017
    volumes:
      # database data persistence
      - mongo-data:/data/db/
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      TZ: Asia/Tokyo

  # admin service container: mongo-express:latest
  admin:
    image: mongo-express:latest
    logging:
      driver: json-file
    # restart: always
    # 所属ネットワーク
    networks:
      - appnet
    ports:
      # http://localhost:${MONGO_EXPRESS_PORT} => service://admin:8081
      - ${MONGO_EXPRESS_PORT:-8081}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongo # service://mongo
      ME_CONFIG_MONGODB_PORT: 27017
      TZ: Asia/Tokyo
  
  # mongodb rest api server service container: softinstigate/restheart:5.1.1
  restheart:
    image: softinstigate/restheart:5.1.1
    logging:
      driver: json-file
    # restart: always
    # 所属ネットワーク
    networks:
      - appnet
    ports:
      # http://localhost:${RESTHEART_PORT} => service://restheart:8080
      - ${RESTHEART_PORT:-8080}:8080
    # ACL（ユーザ権限・認証）を変更したい場合は、自作の properties ファイルを指定して起動する
    ## Default `users.yml`:
    ### - id: admin, password: secret, role: admin
    ### - id: user, password: secret, role: user
    ## Default `acl.yml`:
    ### - admin: role can execute any request
    ### - user: role can execute any request on collection /{username}
    command: ["--envFile", "/opt/restheart/etc/default.properties"]
    environment:
      # MONGO_URI: mongodb://<user>:<password>@<host>
      MONGO_URI: mongodb://root:root@mongo
      TZ: Asia/Tokyo
EOS
    ;;
"node")
    if [ "$w" != "" ]; then
        docker-compose exec -w "/work/$w" $opt node "${@:2:($#-1)}"
    else
        docker-compose exec $opt node "${@:2:($#-1)}"
    fi
    ;;
*)
    docker-compose $*
    ;;
esac